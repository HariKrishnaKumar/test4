"""migration with all tables of conversation

Revision ID: 81431b1ca867
Revises: 2cc61c98225e
Create Date: 2025-09-05 16:19:43.309499
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '81431b1ca867'
down_revision: Union[str, Sequence[str], None] = '2cc61c98225e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('users', sa.Column('device_info', sa.String(255), nullable=True))

    # # Create sessions table
    # op.create_table('sessions',
    #     sa.Column('id', sa.String(100), nullable=False),
    #     sa.Column('user_id', sa.Integer, nullable=True),
    #     sa.Column('language', sa.String(10), nullable=False),
    #     sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.func.now()),
    #     sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    #     sa.PrimaryKeyConstraint('id')
    # )

    # # Create question_masters table
    # op.create_table('question_masters',
    #     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    #     sa.Column('question_key', sa.String(100), nullable=False),
    #     sa.Column('question_text', sa.Text(), nullable=False),
    #     sa.Column('question_order', sa.Integer(), nullable=False),
    #     sa.Column('type', sa.String(50), nullable=True),
    #     sa.Column('is_active', sa.Boolean(), nullable=True, server_default=sa.sql.expression.true()),
    #     sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.func.now()),
    #     sa.Column('updated_at', sa.DateTime(), nullable=True),
    #     sa.PrimaryKeyConstraint('id'),
    #     sa.UniqueConstraint('question_key')
    # )

    # # Create question_translations table
    # op.create_table('question_translations',
    #     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    #     sa.Column('question_key', sa.String(100), nullable=False),
    #     sa.Column('language', sa.String(10), nullable=False),
    #     sa.Column('translated_text', sa.Text(), nullable=False),
    #     sa.Column('variant', sa.String(50), nullable=True),
    #     sa.ForeignKeyConstraint(['question_key'], ['question_masters.question_key'], ),
    #     sa.PrimaryKeyConstraint('id'),
    #     sa.UniqueConstraint('question_key', 'language', name='uq_question_lang')
    # )

    # # Create answer_masters table
    # op.create_table('answer_masters',
    #     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    #     sa.Column('answer_key', sa.String(100), nullable=False),
    #     sa.Column('question_key', sa.String(100), nullable=False),
    #     sa.Column('answer_text', sa.Text(), nullable=False),
    #     sa.Column('answer_order', sa.Integer(), nullable=True),
    #     sa.Column('is_active', sa.Boolean(), nullable=True, server_default=sa.sql.expression.true()),
    #     sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.func.now()),
    #     sa.ForeignKeyConstraint(['question_key'], ['question_masters.question_key'], ),
    #     sa.PrimaryKeyConstraint('id'),
    #     sa.UniqueConstraint('answer_key', name='uq_answer_key')
    # )

    # # Create answer_translations table
    # op.create_table('answer_translations',
    #     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    #     sa.Column('answer_key', sa.String(100), nullable=False),
    #     sa.Column('language', sa.String(10), nullable=False),
    #     sa.Column('translated_text', sa.Text(), nullable=False),
    #     sa.Column('variant', sa.String(50), nullable=True),
    #     sa.ForeignKeyConstraint(['answer_key'], ['answer_masters.answer_key'], ),
    #     sa.PrimaryKeyConstraint('id'),
    #     sa.UniqueConstraint('answer_key', 'language', name='uq_answer_lang')
    # )

    # # Create conversation_entries table
    # op.create_table('conversation_entries',
    #     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    #     sa.Column('session_id', sa.String(100), nullable=True),
    #     sa.Column('user_id', sa.Integer, nullable=True),
    #     sa.Column('question_key', sa.String(100), nullable=False),
    #     sa.Column('answer_key', sa.String(100), nullable=True),
    #     sa.Column('custom_input', sa.Text(), nullable=True),
    #     sa.Column('response_text', sa.Text(), nullable=True),
    #     sa.Column('select_type', sa.String(100), nullable=True),
    #     sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.func.now()),
    #     sa.ForeignKeyConstraint(['answer_key'], ['answer_masters.answer_key'], ),
    #     sa.ForeignKeyConstraint(['question_key'], ['question_masters.question_key'], ),
    #     sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    #     sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    #     sa.PrimaryKeyConstraint('id')
    # )

    # # Create indexes for better performance
    # op.create_index('idx_sessions_user_id', 'sessions', ['user_id'])
    # op.create_index('idx_question_masters_active', 'question_masters', ['is_active'])
    # op.create_index('idx_question_masters_order', 'question_masters', ['question_order'])
    # op.create_index('idx_question_translations_lang', 'question_translations', ['language'])
    # op.create_index('idx_answer_masters_question', 'answer_masters', ['question_key'])
    # op.create_index('idx_answer_masters_active', 'answer_masters', ['is_active'])
    # op.create_index('idx_answer_translations_lang', 'answer_translations', ['language'])
    # op.create_index('idx_conversation_entries_session', 'conversation_entries', ['session_id'])
    # op.create_index('idx_conversation_entries_user', 'conversation_entries', ['user_id'])
    # op.create_index('idx_conversation_entries_question', 'conversation_entries', ['question_key'])
    # op.create_index('idx_conversation_entries_created', 'conversation_entries', ['created_at'])
    pass
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints first
    # op.drop_constraint('conversation_entries_user_id_fkey', 'conversation_entries', type_='foreignkey')
    # op.drop_constraint('conversation_entries_session_id_fkey', 'conversation_entries', type_='foreignkey')
    # op.drop_constraint('conversation_entries_question_key_fkey', 'conversation_entries', type_='foreignkey')
    # op.drop_constraint('conversation_entries_answer_key_fkey', 'conversation_entries', type_='foreignkey')
    # op.drop_constraint('answer_translations_answer_key_fkey', 'answer_translations', type_='foreignkey')
    # op.drop_constraint('answer_masters_question_key_fkey', 'answer_masters', type_='foreignkey')
    # op.drop_constraint('question_translations_question_key_fkey', 'question_translations', type_='foreignkey')
    # op.drop_constraint('sessions_user_id_fkey', 'sessions', type_='foreignkey')

    # # Drop indexes
    # op.drop_index('idx_conversation_entries_created', table_name='conversation_entries')
    # op.drop_index('idx_conversation_entries_question', table_name='conversation_entries')
    # op.drop_index('idx_conversation_entries_user', table_name='conversation_entries')
    # op.drop_index('idx_conversation_entries_session', table_name='conversation_entries')
    # op.drop_index('idx_answer_translations_lang', table_name='answer_translations')
    # op.drop_index('idx_answer_masters_active', table_name='answer_masters')
    # op.drop_index('idx_answer_masters_question', table_name='answer_masters')
    # op.drop_index('idx_question_translations_lang', table_name='question_translations')
    # op.drop_index('idx_question_masters_order', table_name='question_masters')
    # op.drop_index('idx_question_masters_active', table_name='question_masters')
    # op.drop_index('idx_sessions_user_id', table_name='sessions')

    # # Drop tables in reverse order (due to foreign key constraints)
    # op.drop_table('conversation_entries')
    # op.drop_table('answer_translations')
    # op.drop_table('answer_masters')
    # op.drop_table('question_translations')
    # op.drop_table('question_masters')
    # op.drop_table('sessions')

    # # Drop the added column
    # op.drop_column('users', 'device_info')
    pass
    # ### end Alembic commands ###
